name: build

on:
  push:
    branches:
      - master
    tags:
      - '*'
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test and submit coverage report
        run: |
          pip install -r requirements.txt
          playwright install firefox
          ./runtest.sh coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: pylint
        run: |
          pylint --exit-zero app/*

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Available platforms
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Deploy tagged (latest) to GitHub Packages (ghcr.io) and DockerHub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64,linux/arm64 \
              -t ghcr.io/${USERNAME}/scrapper:${ref} -t ghcr.io/${USERNAME}/scrapper:latest \
              -t ${USERNAME}/scrapper:${ref} -t ${USERNAME}/scrapper:latest .
